/**
 * @file
 * Defines default strategy parameter values for the given timeframe.
 */

// Defines indicator's parameter values for the given pair symbol and timeframe.
struct Indi_MFI_Params_{{ Timeframe }} : MFIParams {
  Indi_MFI_Params_{{ Timeframe }}() : MFIParams(indi_mfi_defaults, PERIOD_{{ Timeframe }}) {
    applied_volume = {{ MFI_Indi_MFI_Applied_Volume | default(0) }}
    ma_period = {{ MFI_Indi_MFI_MA_Period | default(0) }};
    shift = {{ MFI_Indi_MFI_Shift | default(0) }};
  }
} indi_mfi_{{ Timeframe | lower }};

// Defines strategy's parameter values for the given pair symbol and timeframe.
struct Stg_MFI_Params_{{ Timeframe }} : StgParams {
  // Struct constructor.
  Stg_MFI_Params_{{ Timeframe }}() : StgParams(stg_mfi_defaults) {
    lot_size = {{ MFI_LotSize | default(0) }};
    signal_open_method = {{ MFI_SignalOpenMethod | default(0) }};
    signal_open_filter_method = {{ MFI_SignalOpenFilterMethod | default(1) }};
    signal_open_level = (float){{ MFI_SignalOpenLevel | default(0) }};
    signal_open_boost = {{ MFI_SignalOpenBoostMethod | default(0) }};
    signal_close_method = {{ MFI_SignalCloseMethod | default(0) }};
    signal_close_level = (float){{ MFI_SignalCloseLevel | default(0) }};
    price_stop_method = {{ MFI_PriceStopMethod | default(0) }};
    price_stop_level = (float){{ MFI_SignalCloseLevel | default(1) }};
    tick_filter_method = {{ MFI_TickFilterMethod  | default(1) }};
    max_spread = {{ MFI_MaxSpread | default(0) }};
  }
} stg_mfi_{{ Timeframe | lower }};
